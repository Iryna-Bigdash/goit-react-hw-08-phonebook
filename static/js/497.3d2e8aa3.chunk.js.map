{"version":3,"file":"static/js/497.3d2e8aa3.chunk.js","mappings":"uPAEMA,EAAgBC,EAAAA,EAAAA,IAAH,kFAMbC,EAAQD,EAAAA,EAAAA,GAAH,uEAKLE,EAAaF,EAAAA,EAAAA,KAAH,qE,SCHVG,EAAaH,EAAAA,EAAAA,MAAH,kFAMVI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,EAAPL,CAAH,mMAeVM,EAAeN,EAAAA,EAAAA,IAAH,mFAMZO,EAAeP,EAAAA,EAAAA,OAAH,gVAiBLQ,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRT,GAASU,EAAAA,EAAAA,IAASD,IAClBP,EAAOS,WACR,EACDC,SAAU,SAAAH,GACR,IAAMI,EAAS,CAAC,EAkBhB,OAhBKJ,EAAOJ,OACVQ,EAAOR,KAAO,YAGXI,EAAOH,MAEA,2CAA2CQ,KAAKL,EAAOH,SACjEO,EAAOP,MAAQ,yBAFfO,EAAOP,MAAQ,WAKZG,EAAOF,SAEDE,EAAOF,SAASQ,OAAS,IAClCF,EAAON,SAAW,+CAFlBM,EAAON,SAAW,WAKbM,CACR,IAGH,OACE,UAACvB,EAAD,YACE,SAACE,EAAD,iCACA,UAACC,EAAD,CAAYe,SAAUN,EAAOc,aAA7B,WACE,UAACtB,EAAD,uBAEE,SAACC,EAAD,CACEsB,KAAK,OACLZ,KAAK,OACLa,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOO,OAAOJ,UAGxBH,EAAOmB,QAAQhB,MAAQH,EAAOW,OAAOR,OACpC,SAACR,EAAD,UAAeK,EAAOW,OAAOR,QAE/B,UAACX,EAAD,oBAEE,SAACC,EAAD,CACEsB,KAAK,QACLZ,KAAK,QACLa,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOO,OAAOH,WAGxBJ,EAAOmB,QAAQf,OAASJ,EAAOW,OAAOP,QACrC,SAACT,EAAD,UAAeK,EAAOW,OAAOP,SAE/B,UAACZ,EAAD,uBAEE,SAACC,EAAD,CACEsB,KAAK,WACLZ,KAAK,WACLa,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOO,OAAOF,cAGxBL,EAAOmB,QAAQd,UAAYL,EAAOW,OAAON,WACxC,SAACV,EAAD,UAAeK,EAAOW,OAAON,YAE/B,SAACT,EAAD,CAAcmB,KAAK,SAAnB,2BAIP,ECnIc,SAASK,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACxB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisteerForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst FormContainer = styled.div`\n  margin: 0 auto;\n  min-width: 300px;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport { FormContainer, Title, StyledForm };","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nimport * as React from 'react';\nimport { useFormik } from 'formik';\nimport FilledInput from '@mui/material/FilledInput';\nimport styled from '@emotion/styled';\nimport { FormContainer, StyledForm, Title } from './RegisteerForm.styled';\n\n\nconst InputLabel = styled.label`\n  margin-bottom: 5px;\n  padding: 4px;\n  color: purple;\n`;\n\nconst InputField = styled(FilledInput)`\n padding: 4px;\n  width: 100%;\n  background-color: white;\n\n  && {\n    input {\n      &:focus,\n      &:hover {\n        background-color: white;\n      }\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 15px;\n  font-size: 14px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 180px;\n  padding: 8px;\n  align-self: center;\n  font-size: 20px;\n  color: #8b54c1;\n  border: none;\n  border-radius: 5%;\n  background-color: white;\n  cursor: pointer; \n  transition: background-color 0.3s ease-in-out;\n      &:focus,\n      &:hover {\n        background-color: #e7e6e6;\n      }\n`;\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      dispatch(register(values));\n      formik.resetForm();\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = 'Required';\n      }\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) {\n        errors.password = 'Required';\n      } else if (values.password.length < 6) {\n        errors.password = 'Password must be at least 6 characters long';\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <FormContainer>\n      <Title>Registration Page</Title>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <InputLabel>\n          Username\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n        </InputLabel>\n        {formik.touched.name && formik.errors.name && (\n          <ErrorMessage>{formik.errors.name}</ErrorMessage>\n        )}\n        <InputLabel>\n          Email\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </InputLabel>\n        {formik.touched.email && formik.errors.email && (\n          <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        )}\n        <InputLabel>\n          Password\n          <InputField\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </InputLabel>\n        {formik.touched.password && formik.errors.password && (\n          <ErrorMessage>{formik.errors.password}</ErrorMessage>\n        )}\n        <SubmitButton type=\"submit\">Register</SubmitButton>\n      </StyledForm>\n    </FormContainer>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["FormContainer","styled","Title","StyledForm","InputLabel","InputField","FilledInput","ErrorMessage","SubmitButton","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","values","register","resetForm","validate","errors","test","length","handleSubmit","type","onChange","handleChange","value","touched","Register","Helmet"],"sourceRoot":""}