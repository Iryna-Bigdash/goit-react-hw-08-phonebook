{"version":3,"file":"static/js/633.ca77ce2b.chunk.js","mappings":"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","sources":["features/post/PostAuthor.js","features/post/TimeAgo.js","features/post/ReactionButtons.js","features/post/PostsList.js","features/post/AddPostForm.js","pages/Home.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectAllUsers } from \"features/users/usersSlice\";\n\n const PostAuthor = ( {userId} ) => {\n    const users = useSelector(selectAllUsers);\n    const author = users.find(user => user.id === userId);\n\n   return (\n     <span>\n       by {author? author.name : 'Unknown author'}\n     </span>\n   )\n }\n \n export default PostAuthor;\n ","import { parseISO, formatDistanceToNow } from \"date-fns\";\n\nconst TimeAgo = ({ timestamp }) => {\n  let timeAgo = '';\n\n  if (timestamp) {\n    const date = parseISO(timestamp);\n    const timePeriod = formatDistanceToNow(date);\n    timeAgo = `${timePeriod} ago`;\n  }\n\n  return (\n    <span title={timestamp}>\n      &nbsp; <i>{timeAgo}</i>\n    </span>\n  );\n};\n\nexport default TimeAgo;\n","import { useDispatch } from \"react-redux\";\nimport { reactionAdded } from \"./postSlice\";\n\nconst reactionEmoji = {\n    thumbsUp: '👍🏻',\n    wow: '😻',\n    heart: '♥️',\n    rocket: '🚀',\n    coffee: '☕️',\n}\n\nfunction ReactionButtons( {post} ) {\n    const dispatch = useDispatch();\n\n    const reactionButtons = Object.entries(reactionEmoji).map(([name, emoji]) => {\n        return (\n            <button\n            key={name}\n            type=\"button\"\n            onClick={()=> \n            dispatch(reactionAdded({postId: post.id, reaction: name }))\n            }\n            >\n            {emoji} {post.reactions[name]}\n            </button> \n          )\n    })\n return <div>{reactionButtons}</div> \n}\n\nexport default ReactionButtons\n","import { useSelector } from \"react-redux\";\nimport { selectAllPosts } from \"./postSlice\";\nimport styled from \"@emotion/styled\";\nimport React from 'react';\nimport PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\nimport ReactionButtons from \"./ReactionButtons\";\n\nconst Container = styled.section`\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Article = styled.article`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid whitesmoke;\n  background-color: white;\n  margin-bottom: 20px;\n  border-radius: 4px;\n`;\n\nconst Title = styled.h3`\n  color: #333;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst Content = styled.p`\n  color: #666;\n  font-size: 16px;\n`;\n\nconst PostsList = () => {\n  const posts = useSelector(selectAllPosts);\n\n  const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date))\n\n  const renderedPost = orderedPosts.map(post => (\n    <Article key={post.id}> \n      <Title>{post.title}</Title>\n      <Content>{post.content.substring(0, 100)}</Content>\n      <p>\n        <PostAuthor userId={post.userId} />\n        <TimeAgo timestamp={post.date} />\n      </p>\n       < ReactionButtons post={post}/>\n    </Article>\n  ));\n\n  return ( \n    <Container>\n      <h2>PostsList</h2>\n      {renderedPost}\n    </Container>\n  );\n};\n\nexport default PostsList;","import React from 'react';\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport styled from \"@emotion/styled\";\nimport { selectAllUsers } from 'features/users/usersSlice';\nimport { postAdded } from './postSlice';\n\nconst Section = styled.section`\n  margin-top: 20px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 5px;\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n  margin-bottom: 10px;\n`;\n\nconst Textarea = styled.textarea`\n  padding: 5px;\n  margin-bottom: 10px;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  background-color: #333;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChange = e => setTitle(e.target.value);\n  const onContentChange = e => setContent(e.target.value);\n  const onAuthorChange = e => setUserId(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(\n        postAdded(title, content, userId)\n      );\n      setTitle('');\n      setContent('');\n    }\n  };\n\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n\n  const usersOptions = users.map(user => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ));\n\n  return (\n    <Section>\n      <h2>Add a new Post</h2>\n      <Form>\n        <Label htmlFor=\"postTitle\">Post Title</Label>\n        <Input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChange}\n        />\n\n        <Label htmlFor=\"postContent\">Content:</Label>\n        <Textarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChange}\n        />\n\n        <label htmlFor=\"postAuthor\">Author:</label>\n        <select\n          id=\"postAuthor\"\n          value={userId}\n          onChange={onAuthorChange}\n        >\n          <option value=\"\"></option>\n          {usersOptions}\n        </select>\n\n        <Button\n          type=\"button\"\n          onClick={onSavePostClicked}\n          disabled={!canSave}\n        >\n          Save Post\n        </Button>\n      </Form>\n    </Section>\n  );\n};\n\nexport default AddPostForm;\n","import PostsList from \"features/post/PostsList\";\nimport AddPostForm from \"features/post/AddPostForm\";\nimport { useAuth } from \"hooks/hooks\";\n\nconst styles = {\n    container: {\n      minHeight: 'calc(100vh - 50px)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    title: {\n      fontWeight: 500,\n      fontSize: 48,\n      textAlign: 'center',\n    },\n  };\n \n \n  export default function Home() {\n    \n    const { isLoggedIn } = useAuth();\n    return (\n      <div style={{textAlign: 'center'}}>\n        <h1 style={styles.title}>\n          Contacts manager welcome page{' '}\n        </h1>\n        {isLoggedIn ? (\n          <>\n        <AddPostForm/>\n        < PostsList />\n        </>) : < PostsList />}\n      </div>\n    );\n  }    \n\n"],"names":["_ref","userId","author","useSelector","selectAllUsers","find","user","id","_jsxs","children","name","timestamp","timeAgo","date","parseISO","timePeriod","formatDistanceToNow","concat","title","_jsx","reactionEmoji","thumbsUp","wow","heart","rocket","coffee","post","dispatch","useDispatch","reactionButtons","Object","entries","map","_ref2","_ref3","_slicedToArray","emoji","type","onClick","reactionAdded","postId","reaction","reactions","Container","styled","_templateObject","_taggedTemplateLiteral","Article","_templateObject2","Title","_templateObject3","Content","_templateObject4","renderedPost","selectAllPosts","slice","sort","a","b","localeCompare","content","substring","PostAuthor","TimeAgo","ReactionButtons","Section","Form","Label","Input","Textarea","_templateObject5","Button","_templateObject6","_useState","useState","_useState2","setTitle","_useState3","_useState4","setContent","_useState5","_useState6","setUserId","users","canSave","Boolean","usersOptions","value","htmlFor","onChange","e","target","postAdded","disabled","styles","container","minHeight","display","alignItems","justifyContent","fontWeight","fontSize","textAlign","Home","isLoggedIn","useAuth","style","_Fragment","AddPostForm","PostsList"],"sourceRoot":""}