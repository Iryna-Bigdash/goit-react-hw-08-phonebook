{"version":3,"file":"static/js/309.64a61723.chunk.js","mappings":"uPAEMA,EAAgBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAM1BC,EAAQH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yDAKjBG,EAAaL,EAAAA,EAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uDAKxBK,EAAeP,EAAAA,EAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kU,SCR5BO,EAAaT,EAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMzBQ,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,EAAPX,CAAmBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qLAehCU,EAAeZ,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qEAOlBW,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRR,GAASS,EAAAA,EAAAA,IAAMD,IACfN,EAAOQ,WACT,EACAC,SAAU,SAAAH,GACR,IAAMI,EAAS,CAAC,EAchB,OAZKJ,EAAOH,MAEA,2CAA2CQ,KAAKL,EAAOH,SACjEO,EAAOP,MAAQ,yBAFfO,EAAOP,MAAQ,WAKZG,EAAOF,SAEDE,EAAOF,SAASQ,OAAS,IAClCF,EAAON,SAAW,+CAFlBM,EAAON,SAAW,WAKbM,CACT,IAGF,OACEG,EAAAA,EAAAA,MAAC9B,EAAa,CAAA+B,SAAA,EACZC,EAAAA,EAAAA,KAAC5B,EAAK,CAAA2B,SAAC,gBACPD,EAAAA,EAAAA,MAACxB,EAAU,CAACgB,SAAUL,EAAOgB,aAAaF,SAAA,EAC3CD,EAAAA,EAAAA,MAACpB,EAAU,CAAAqB,SAAA,CAAC,SAEPC,EAAAA,EAAAA,KAACrB,EAAU,CACTuB,KAAK,QACLC,KAAK,QACLC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOM,OAAOH,WAGxBH,EAAOsB,QAAQnB,OAASH,EAAOU,OAAOP,QACrCY,EAAAA,EAAAA,KAACnB,EAAY,CAAAkB,SAAEd,EAAOU,OAAOP,SAE/BU,EAAAA,EAAAA,MAACpB,EAAU,CAAAqB,SAAA,CAAC,YAEVC,EAAAA,EAAAA,KAACrB,EAAU,CACTuB,KAAK,WACLC,KAAK,WACLC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOM,OAAOF,cAGxBJ,EAAOsB,QAAQlB,UAAYJ,EAAOU,OAAON,WACxCW,EAAAA,EAAAA,KAACnB,EAAY,CAAAkB,SAAEd,EAAOU,OAAON,YAE/BW,EAAAA,EAAAA,KAACxB,EAAY,CAAC0B,KAAK,SAAQH,SAAC,eAIpC,EClGe,SAASS,IACtB,OACEV,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAAAV,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAETC,EAAAA,EAAAA,KAAClB,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst FormContainer = styled.div`\n  margin: 0 auto;\n  min-width: 300px;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SubmitButton = styled.button`\n  width: 180px;\n  padding: 8px;\n  align-self: center;\n  font-size: 20px;\n  color: #8b54c1;\n  border: none;\n  border-radius: 5%;\n  background-color: white;\n  cursor: pointer; \n  transition: background-color 0.3s ease-in-out;\n      &:focus,\n      &:hover {\n        background-color: #e7e6e6;\n      }\n`;\nexport { FormContainer, Title, StyledForm, SubmitButton };","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport * as React from 'react';\nimport { useFormik } from 'formik';\nimport FilledInput from '@mui/material/FilledInput';\nimport styled from '@emotion/styled';\nimport { FormContainer, StyledForm, SubmitButton, Title } from './LoginForm.styled';\n\n\nconst InputLabel = styled.label`\n  margin-bottom: 5px;\n  padding: 4px;\n  color: purple;\n`;\n\nconst InputField = styled(FilledInput)`\n padding: 4px;\n  width: 100%;\n  background-color: white;\n\n  && {\n    input {\n      &:focus,\n      &:hover {\n        background-color: white;\n      }\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 15px;\n  font-size: 14px;\n`;\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      dispatch(logIn(values));\n      formik.resetForm();\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) {\n        errors.password = 'Required';\n      } else if (values.password.length < 6) {\n        errors.password = 'Password must be at least 6 characters long';\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <FormContainer>\n      <Title>Login Page</Title>\n      <StyledForm onSubmit={formik.handleSubmit}>   \n     <InputLabel>\n          Email\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </InputLabel>\n        {formik.touched.email && formik.errors.email && (\n          <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        )}\n        <InputLabel>\n          Password\n          <InputField\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </InputLabel>\n        {formik.touched.password && formik.errors.password && (\n          <ErrorMessage>{formik.errors.password}</ErrorMessage>\n        )}\n        <SubmitButton type=\"submit\">Login</SubmitButton>\n      </StyledForm>\n    </FormContainer>\n  );\n};\n\n\n   \n\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledForm","_templateObject3","SubmitButton","_templateObject4","InputLabel","InputField","FilledInput","ErrorMessage","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","values","logIn","resetForm","validate","errors","test","length","_jsxs","children","_jsx","handleSubmit","type","name","onChange","handleChange","value","touched","Login","Helmet"],"sourceRoot":""}