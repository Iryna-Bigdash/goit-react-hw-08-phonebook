{"version":3,"file":"static/js/497.47ec18eb.chunk.js","mappings":"uPAEMA,EAAgBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAM1BC,EAAQH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yDAKjBG,EAAaL,EAAAA,EAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uD,SCJxBK,EAAaP,EAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMzBM,GAAaR,EAAAA,EAAAA,GAAOS,EAAAA,EAAPT,CAAmBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sLAehCQ,EAAeV,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qEAMzBS,EAAeX,EAAAA,EAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iTAiBrBW,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRT,GAASU,EAAAA,EAAAA,IAASD,IAClBP,EAAOS,WACT,EACAC,SAAU,SAAAH,GACR,IAAMI,EAAS,CAAC,EAoBhB,OAlBKJ,EAAOJ,OACVQ,EAAOR,KAAO,YAGXI,EAAOH,MAGT,2CAA2CQ,KAAKL,EAAOH,SAExDO,EAAOP,MAAQ,yBAJfO,EAAOP,MAAQ,WAOZG,EAAOF,SAEDE,EAAOF,SAASQ,OAAS,IAClCF,EAAON,SAAW,+CAFlBM,EAAON,SAAW,WAKbM,CACT,IAGF,OACEG,EAAAA,EAAAA,MAAC/B,EAAa,CAAAgC,SAAA,EACZC,EAAAA,EAAAA,KAAC7B,EAAK,CAAA4B,SAAC,uBACPD,EAAAA,EAAAA,MAACzB,EAAU,CAACiB,SAAUN,EAAOiB,aAAaF,SAAA,EACxCD,EAAAA,EAAAA,MAACvB,EAAU,CAAAwB,SAAA,CAAC,YAEVC,EAAAA,EAAAA,KAACxB,EAAU,CACT0B,KAAK,OACLf,KAAK,OACLgB,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOO,OAAOJ,UAGxBH,EAAOsB,QAAQnB,MAAQH,EAAOW,OAAOR,OACpCa,EAAAA,EAAAA,KAACtB,EAAY,CAAAqB,SAAEf,EAAOW,OAAOR,QAE/BW,EAAAA,EAAAA,MAACvB,EAAU,CAAAwB,SAAA,CAAC,SAEVC,EAAAA,EAAAA,KAACxB,EAAU,CACT0B,KAAK,QACLf,KAAK,QACLgB,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOO,OAAOH,WAGxBJ,EAAOsB,QAAQlB,OAASJ,EAAOW,OAAOP,QACrCY,EAAAA,EAAAA,KAACtB,EAAY,CAAAqB,SAAEf,EAAOW,OAAOP,SAE/BU,EAAAA,EAAAA,MAACvB,EAAU,CAAAwB,SAAA,CAAC,YAEVC,EAAAA,EAAAA,KAACxB,EAAU,CACT0B,KAAK,WACLf,KAAK,WACLgB,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOO,OAAOF,cAGxBL,EAAOsB,QAAQjB,UAAYL,EAAOW,OAAON,WACxCW,EAAAA,EAAAA,KAACtB,EAAY,CAAAqB,SAAEf,EAAOW,OAAON,YAE/BW,EAAAA,EAAAA,KAACrB,EAAY,CAACuB,KAAK,SAAQH,SAAC,kBAIpC,ECpIe,SAASQ,IACtB,OACET,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAAT,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACnB,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisteerForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst FormContainer = styled.div`\n  margin: 0 auto;\n  min-width: 300px;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport { FormContainer, Title, StyledForm };","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nimport * as React from 'react';\nimport { useFormik } from 'formik';\nimport FilledInput from '@mui/material/FilledInput';\nimport styled from '@emotion/styled';\nimport { FormContainer, StyledForm, Title } from './RegisteerForm.styled';\n\nconst InputLabel = styled.label`\n  margin-bottom: 5px;\n  padding: 4px;\n  color: purple;\n`;\n\nconst InputField = styled(FilledInput)`\n  padding: 4px;\n  width: 100%;\n  background-color: white;\n\n  && {\n    input {\n      &:focus,\n      &:hover {\n        background-color: white;\n      }\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-bottom: 15px;\n  font-size: 14px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 180px;\n  padding: 8px;\n  align-self: center;\n  font-size: 20px;\n  color: #8b54c1;\n  border: none;\n  border-radius: 5%;\n  background-color: white;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n  &:focus,\n  &:hover {\n    background-color: #e7e6e6;\n  }\n`;\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      dispatch(register(values));\n      formik.resetForm();\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = 'Required';\n      }\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) {\n        errors.password = 'Required';\n      } else if (values.password.length < 6) {\n        errors.password = 'Password must be at least 6 characters long';\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <FormContainer>\n      <Title>Registration Page</Title>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <InputLabel>\n          Username\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n        </InputLabel>\n        {formik.touched.name && formik.errors.name && (\n          <ErrorMessage>{formik.errors.name}</ErrorMessage>\n        )}\n        <InputLabel>\n          Email\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </InputLabel>\n        {formik.touched.email && formik.errors.email && (\n          <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        )}\n        <InputLabel>\n          Password\n          <InputField\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </InputLabel>\n        {formik.touched.password && formik.errors.password && (\n          <ErrorMessage>{formik.errors.password}</ErrorMessage>\n        )}\n        <SubmitButton type=\"submit\">Register</SubmitButton>\n      </StyledForm>\n    </FormContainer>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledForm","_templateObject3","InputLabel","InputField","FilledInput","ErrorMessage","SubmitButton","_templateObject4","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","values","register","resetForm","validate","errors","test","length","_jsxs","children","_jsx","handleSubmit","type","onChange","handleChange","value","touched","Register","Helmet"],"sourceRoot":""}