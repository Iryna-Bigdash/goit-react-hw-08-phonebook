{"version":3,"file":"static/js/751.a295cb53.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["\nexport const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  background-color: #8b54c1;\n  color: white;\n  padding: 0;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const ContactsContainer = styled.div`\n  flex: 1;\n  text-align:start;\n  font-weight: bold;\n  margin-right: 10px;\n`;\n\nexport const PhoneContainer = styled.div`\n text-align:start;\n  flex: 1;\n`;\n\nexport const DeleteContactBtn = styled.button`\n   background-color: #e5d2f8;\n   width: 100px;\n   cursor: pointer;\n   color: #8b54c1;\n   font-weight: 800;\n   font-size: 23px;\n\n   &&:hover{\n    background-color: white;\n\n   }\n\n`","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, removeContact } from 'redux/contacts/operations';\nimport {\n  ContactsContainer,\n  ContactsItem,\n  ContactsList,\n  DeleteContactBtn,\n  PhoneContainer,\n} from './ContactList.styled';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const filteredContacts = () => {\n    if (filter) {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  return (\n    <ContactsList>\n      {filteredContacts().map(({ id, name, number }) => (\n        <ContactsItem key={id}>\n          <ContactsContainer>{name}:</ContactsContainer>\n          <PhoneContainer>{number}</PhoneContainer>\n          <DeleteContactBtn onClick={() => handleDeleteContact(id)}>\n            Delete\n          </DeleteContactBtn>\n        </ContactsItem>\n      ))}\n    </ContactsList>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-color: white;\n  background-color: #8b54c1;\n`;\n\nconst Label = styled.label`\n  margin-right: 10px;\n  font-weight: bold;\n  color: white;\n`;\n\nconst InputForm = styled.input`\n  padding: 10px;\n  margin-right: 10px;\n  font-size: 25px;\n`;\n\nconst BtnForm = styled.button`\n  width: 180px;\n  padding: 10px;\n  background-color: #8b54c1;\n  font-size: 25px;\n  color: white;\n  border: none;\n  border-radius: 5%;\n  cursor: pointer; \n   &&:hover{\n    border: 1px solid white;\n  }\n`;\n\n\nexport { Form, Label, InputForm, BtnForm };\n\n\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { useState } from 'react';\nimport { Form, Label, InputForm, BtnForm } from './ContactForm.styled';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n  const initialState = { name: '', number: '' };\n  const [contact, setContact] = useState(initialState);\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setContact(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n\n    if (name === 'name') {\n      const namePattern =\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n      if (!namePattern.test(value)) {\n        e.target.setCustomValidity(\n          \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        );\n      } else {\n        e.target.setCustomValidity('');\n      }\n    }\n\n    if (name === 'number') {\n      const numberPattern =\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n      if (!numberPattern.test(value)) {\n        e.target.setCustomValidity(\n          'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n        );\n      } else {\n        e.target.setCustomValidity('');\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(({ number }) => number === contact.number)) {\n      toast.error(`${contact.number} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({ id: contact.id, name: contact.name, number: contact.number })\n    );\n    setContact(initialState);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={contact.id}>Name</Label>\n      <InputForm\n        id={contact.id}\n        type=\"text\"\n        name=\"name\"\n        value={contact.name}\n        required\n        onChange={handleChange}\n      />\n\n      <Label htmlFor={contact.id}>Number</Label>\n      <InputForm\n        id={contact.id}\n        type=\"tel\"\n        name=\"number\"\n        value={contact.number}\n        required\n        onChange={handleChange}\n      />\n\n      <BtnForm type=\"submit\" disabled={!contact.name || !contact.number}>\n        Add contact\n      </BtnForm>\n      <ToastContainer />\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n    font-size: 30px;\n`\n\nexport const FilterInput = styled.input`\n    font-size: 30px; \n    margin: 10px;\n`","\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { FilterLabel, FilterInput } from './Filter.styled'; \nimport { useDispatch } from 'react-redux';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <>\n      <FilterLabel htmlFor=\"1\">Find contacts by name</FilterLabel>\n      <FilterInput\n        id=\"1\"\n        type=\"text\"\n        name=\"filter\"\n        title=\"Use this field to filter contacts by contact's name\"\n        onChange={handleChangeFilter}\n      />\n    </>\n  );\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter/>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getFilter","filter","ContactsList","styled","ContactsItem","ContactsContainer","PhoneContainer","DeleteContactBtn","ContactList","useSelector","dispatch","useDispatch","useEffect","fetchContacts","normalizedFilter","toLowerCase","contact","name","includes","filteredContacts","map","id","number","onClick","removeContact","handleDeleteContact","Form","Label","InputForm","BtnForm","_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","ContactForm","initialState","useState","setContact","handleChange","e","value","prevState","test","setCustomValidity","onSubmit","preventDefault","find","toast","addContact","htmlFor","type","required","onChange","disabled","FilterLabel","FilterInput","Filter","title","setFilter","Contacts","Helmet"],"sourceRoot":""}